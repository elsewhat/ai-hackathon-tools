/*
 * Azure OpenAI Service API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2023-09-01-preview
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AzureOpenAI.Model;
using AzureOpenAI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace AzureOpenAI.Test.Model
{
    /// <summary>
    ///  Class for testing CompletionsCreateRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CompletionsCreateRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CompletionsCreateRequest
        //private CompletionsCreateRequest instance;

        public CompletionsCreateRequestTests()
        {
            // TODO uncomment below to create an instance of CompletionsCreateRequest
            //instance = new CompletionsCreateRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CompletionsCreateRequest
        /// </summary>
        [Fact]
        public void CompletionsCreateRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" CompletionsCreateRequest
            //Assert.IsType<CompletionsCreateRequest>(instance);
        }

        /// <summary>
        /// Test the property 'Prompt'
        /// </summary>
        [Fact]
        public void PromptTest()
        {
            // TODO unit test for the property 'Prompt'
        }

        /// <summary>
        /// Test the property 'MaxTokens'
        /// </summary>
        [Fact]
        public void MaxTokensTest()
        {
            // TODO unit test for the property 'MaxTokens'
        }

        /// <summary>
        /// Test the property 'Temperature'
        /// </summary>
        [Fact]
        public void TemperatureTest()
        {
            // TODO unit test for the property 'Temperature'
        }

        /// <summary>
        /// Test the property 'TopP'
        /// </summary>
        [Fact]
        public void TopPTest()
        {
            // TODO unit test for the property 'TopP'
        }

        /// <summary>
        /// Test the property 'LogitBias'
        /// </summary>
        [Fact]
        public void LogitBiasTest()
        {
            // TODO unit test for the property 'LogitBias'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }

        /// <summary>
        /// Test the property 'N'
        /// </summary>
        [Fact]
        public void NTest()
        {
            // TODO unit test for the property 'N'
        }

        /// <summary>
        /// Test the property 'Stream'
        /// </summary>
        [Fact]
        public void StreamTest()
        {
            // TODO unit test for the property 'Stream'
        }

        /// <summary>
        /// Test the property 'Logprobs'
        /// </summary>
        [Fact]
        public void LogprobsTest()
        {
            // TODO unit test for the property 'Logprobs'
        }

        /// <summary>
        /// Test the property 'Suffix'
        /// </summary>
        [Fact]
        public void SuffixTest()
        {
            // TODO unit test for the property 'Suffix'
        }

        /// <summary>
        /// Test the property 'Echo'
        /// </summary>
        [Fact]
        public void EchoTest()
        {
            // TODO unit test for the property 'Echo'
        }

        /// <summary>
        /// Test the property 'Stop'
        /// </summary>
        [Fact]
        public void StopTest()
        {
            // TODO unit test for the property 'Stop'
        }

        /// <summary>
        /// Test the property 'CompletionConfig'
        /// </summary>
        [Fact]
        public void CompletionConfigTest()
        {
            // TODO unit test for the property 'CompletionConfig'
        }

        /// <summary>
        /// Test the property 'PresencePenalty'
        /// </summary>
        [Fact]
        public void PresencePenaltyTest()
        {
            // TODO unit test for the property 'PresencePenalty'
        }

        /// <summary>
        /// Test the property 'FrequencyPenalty'
        /// </summary>
        [Fact]
        public void FrequencyPenaltyTest()
        {
            // TODO unit test for the property 'FrequencyPenalty'
        }

        /// <summary>
        /// Test the property 'BestOf'
        /// </summary>
        [Fact]
        public void BestOfTest()
        {
            // TODO unit test for the property 'BestOf'
        }
    }
}
