/*
 * Azure OpenAI Service API
 *
 * Azure OpenAI APIs for completions and search
 *
 * The version of the OpenAPI document: 2023-09-01-preview
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AzureOpenAI.Client.OpenAPIDateConverter;

namespace AzureOpenAI.Model
{
    /// <summary>
    /// CompletionsCreate200ResponseUsage
    /// </summary>
    [DataContract(Name = "Completions_Create_200_response_usage")]
    public partial class CompletionsCreate200ResponseUsage : IEquatable<CompletionsCreate200ResponseUsage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompletionsCreate200ResponseUsage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CompletionsCreate200ResponseUsage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CompletionsCreate200ResponseUsage" /> class.
        /// </summary>
        /// <param name="completionTokens">completionTokens (required).</param>
        /// <param name="promptTokens">promptTokens (required).</param>
        /// <param name="totalTokens">totalTokens (required).</param>
        public CompletionsCreate200ResponseUsage(decimal completionTokens = default(decimal), decimal promptTokens = default(decimal), decimal totalTokens = default(decimal))
        {
            this.CompletionTokens = completionTokens;
            this.PromptTokens = promptTokens;
            this.TotalTokens = totalTokens;
        }

        /// <summary>
        /// Gets or Sets CompletionTokens
        /// </summary>
        [DataMember(Name = "completion_tokens", IsRequired = true, EmitDefaultValue = true)]
        public decimal CompletionTokens { get; set; }

        /// <summary>
        /// Gets or Sets PromptTokens
        /// </summary>
        [DataMember(Name = "prompt_tokens", IsRequired = true, EmitDefaultValue = true)]
        public decimal PromptTokens { get; set; }

        /// <summary>
        /// Gets or Sets TotalTokens
        /// </summary>
        [DataMember(Name = "total_tokens", IsRequired = true, EmitDefaultValue = true)]
        public decimal TotalTokens { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CompletionsCreate200ResponseUsage {\n");
            sb.Append("  CompletionTokens: ").Append(CompletionTokens).Append("\n");
            sb.Append("  PromptTokens: ").Append(PromptTokens).Append("\n");
            sb.Append("  TotalTokens: ").Append(TotalTokens).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompletionsCreate200ResponseUsage);
        }

        /// <summary>
        /// Returns true if CompletionsCreate200ResponseUsage instances are equal
        /// </summary>
        /// <param name="input">Instance of CompletionsCreate200ResponseUsage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompletionsCreate200ResponseUsage input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CompletionTokens == input.CompletionTokens ||
                    this.CompletionTokens.Equals(input.CompletionTokens)
                ) && 
                (
                    this.PromptTokens == input.PromptTokens ||
                    this.PromptTokens.Equals(input.PromptTokens)
                ) && 
                (
                    this.TotalTokens == input.TotalTokens ||
                    this.TotalTokens.Equals(input.TotalTokens)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.CompletionTokens.GetHashCode();
                hashCode = (hashCode * 59) + this.PromptTokens.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalTokens.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
